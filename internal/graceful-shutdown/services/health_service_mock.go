// Code generated by mockery v2.32.0. DO NOT EDIT.

package service

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// HealthServiceMock is an autogenerated mock type for the IHealthService type
type HealthServiceMock struct {
	mock.Mock
}

// BlockingRequest provides a mock function with given fields: seconds
func (_m *HealthServiceMock) BlockingRequest(seconds time.Duration) {
	_m.Called(seconds)
}

// GetHealth provides a mock function with given fields:
func (_m *HealthServiceMock) GetHealth() gin.H {
	ret := _m.Called()

	var r0 gin.H
	if rf, ok := ret.Get(0).(func() gin.H); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.H)
		}
	}

	return r0
}

// NewHealthServiceMock creates a new instance of HealthServiceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHealthServiceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *HealthServiceMock {
	mock := &HealthServiceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
